}
ggplot(CAF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
library(ggplot2)
ddfit <- Fit_fix[[35]]
CAF <- c()
CDF <- c()
for ( i in 1:length(ddfit@MODEL@MM))
{
CAF <- rbind(CAF,cbind(ddfit@INP_REP@REP$CAF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CAF[[i]],type="FIT"))
CDF <- rbind(CDF,cbind(ddfit@INP_REP@REP$CDF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CDF[[i]],type="FIT"))
}
ggplot(CAF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CAF,aes(x=perc,y=acc,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CDF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
ddfit <- Fit_fix[[15]]
CAF <- c()
CDF <- c()
for ( i in 1:length(ddfit@MODEL@MM))
{
CAF <- rbind(CAF,cbind(ddfit@INP_REP@REP$CAF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CAF[[i]],type="FIT"))
CDF <- rbind(CDF,cbind(ddfit@INP_REP@REP$CDF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CDF[[i]],type="FIT"))
}
ggplot(CAF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CAF,aes(x=perc,y=acc,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CDF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
rm(CAF,CDF)
ddfit <- Fit_fix[[7]]
CAF <- c()
CDF <- c()
for ( i in 1:length(ddfit@MODEL@MM))
{
CAF <- rbind(CAF,cbind(ddfit@INP_REP@REP$CAF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CAF[[i]],type="FIT"))
CDF <- rbind(CDF,cbind(ddfit@INP_REP@REP$CDF[[i]],type="TBF"),cbind(ddfit@FIT_REP@REP$CDF[[i]],type="FIT"))
}
ggplot(CAF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CAF,aes(x=perc,y=acc,color=type,linetype=cond)) + geom_line() + geom_point()
ggplot(CDF,aes(x=perc,y=time,color=type,linetype=cond)) + geom_line() + geom_point()
nrow(SS_RC)
nrow(SS_RC[SS_RC$Fit < 0.1,])
SS_RC[SS_RC$Fit < 0.1,]
SS_RC[SS_RC$Fit >= 0.1,]
library(rjson)
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey",full.names = TRUE)
RAW_data <- list()
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
rm(i,j,VP,blocks)
View(RAW_data)
View(RAW_data[[1]][["Cong"]])
View(RAW_data[[1]][["Incong"]])
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey",full.names = TRUE)
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
rm(i,j,VP,blocks)
View(RAW_data)
names(RAW_data)
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey/Ohne_Training",full.names = TRUE)
VP
VP <- list.files(path ="C:/Users/thomaDesktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
RAW_data[[i]]$VP <- i
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
VP <- list.files(path ="C:/Users/thomaDesktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
RAW_data[[i]]$VP <- i
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
VP <- list.files(path ="C:/Users/thomaDesktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
RAW_data[[i]]$VP <- i
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
VP <- list.files(path ="C:/Users/thomaDesktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
#RAW_data[[i]]$VP <- i
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
VP <- list.files(path ="C:/Users/thoma/Desktop/Daten_Druey/Ohne_Training",full.names = TRUE)
RAW_data <- list()
for (i in 1:length(VP))
{
blocks <- list.files(path = VP[i],full.names = TRUE,pattern = "block")
for (j in 1:length(blocks))
{
if (j == 1)
{
RAW_data[[i]] <- as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")]
}
else
{
RAW_data[[i]] <- rbind(RAW_data[[i]],as.data.frame(fromJSON(file = blocks[j]))[,c("con","RT","correct","task","pt")])
}
}
names(RAW_data[[i]]) <- c("cond","time","resp","win","pts")
RAW_data[[i]]$cond <- factor(RAW_data[[i]]$cond,levels = c("1","0"),labels = c("Cong","Incong"))
RAW_data[[i]]$VP <- i
#RAW_data[[i]] <- split(RAW_data[[i]],f = RAW_data[[i]]$cond)
}
rm(i,j,VP,blocks)
RAW_data[[1]]
RAW_data[[2]]
RAW_data <- do.call(rbind,RAW_data)
View(RAW_data)
library(data.table)
RAW_data <- as.data.table(RAW_data)
RAW_data
str(RAW_data)
RAW_data[,VP := as.factor(VP)]
str(RAW_data)
RAW_data[,ptsum=sum(pts),by="VP"]
RAW_data[,.(ptsum=sum(pts)),by="VP"]
View(RAW_data)
RAW_data[,.(win=win,ptsum=sum(pts)),by="VP"]
str(RAW_data)
RAW_data[,win := as.factor(win)]
RAW_data[,.(ptsum=sum(pts)),by=c("VP","win")]
Data <- RAW_data[,.(ptsum=sum(pts)),by=c("VP","win")]
load(file ="C:/Users/thoma/Documents/Uni/Psychologie/Software/DATA/SS_Fit_S_open_new_cond_1mil")
SS_RC <- do.call(rbind,lapply(Fit_fix,function(x){x@FIT@FIT_P}))
SS_RC <- cbind(SS_RC,Fit=unlist(lapply(Fit_fix,function(x){x@FIT@FIT_V})))
SS_RC <- as.data.frame(SS_RC)
SS_RC <- apply(SS_RC,2,function(x){unlist(x)})
SS_RC <- as.data.frame(SS_RC)
SS_RC <- as.data.table(SS_RC)
str(SS_RC)
SS_RC <- as.data.frame(SS_RC)
str(SS_RC)
load(file ="C:/Users/thoma/Documents/Uni/Psychologie/Software/DATA/SS_Fit_S_open_new_cond_1mil")
load(file ="C:/Users/thoma/Documents/Uni/Psychologie/Software/DATA/SS_Fit_S_open_new_cond_1mil")
SS_RC <- do.call(rbind,lapply(Fit_fix,function(x){x@FIT@FIT_P}))
SS_RC <- cbind(SS_RC,Fit=unlist(lapply(Fit_fix,function(x){x@FIT@FIT_V})))
SS_RC <- as.data.frame(SS_RC)
SS_RC <- apply(SS_RC,2,function(x){unlist(x)})
SS_RC <- as.data.frame(SS_RC)
SS_RC <- as.data.table(SS_RC)
str(SS_RC)
SS_RC <- as.data.frame(SS_RC)
str(SS_RC)
SS_RC <- as.data.table(SS_RC)
SS_RC
SS_RC[,VP:=1:nrow(SS_RC)]
SS_RC
load(file ="C:/Users/thoma/Documents/Uni/Psychologie/Software/DATA/SS_Fit_S_open_new_cond_1mil")
SS_RC <- do.call(rbind,lapply(Fit_fix,function(x){x@FIT@FIT_P}))
SS_RC <- cbind(SS_RC,Fit=unlist(lapply(Fit_fix,function(x){x@FIT@FIT_V})))
SS_RC <- as.data.frame(SS_RC)
SS_RC <- apply(SS_RC,2,function(x){unlist(x)})
SS_RC <- as.data.frame(SS_RC)
SS_RC <- as.data.table(SS_RC)
Data <- cbind(Data,SS_RC)
Data
SS_RC[1,1]
SS_RC[1,1] <- 0
Data
SS_RC
load(file ="C:/Users/thoma/Documents/Uni/Psychologie/Software/DATA/SS_Fit_S_open_new_cond_1mil")
SS_RC <- do.call(rbind,lapply(Fit_fix,function(x){x@FIT@FIT_P}))
SS_RC <- cbind(SS_RC,Fit=unlist(lapply(Fit_fix,function(x){x@FIT@FIT_V})))
SS_RC <- as.data.frame(SS_RC)
SS_RC <- apply(SS_RC,2,function(x){unlist(x)})
SS_RC <- as.data.frame(SS_RC)
SS_RC <- as.data.table(SS_RC)
library(afex)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "ptsum")
library(apa)
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "Ter")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "mu_t")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "mu_f")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "mu_SS")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "mu_RS2")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "a")
anova_apa(AOV)
AOV <- aov_ez(data = Data,id = "VP",between = "win",dv = "c")
anova_apa(AOV)
Data[Fit<0.1,]
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "c")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "Ter")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "a")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "mu_t")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "mu_f")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "mu_SS")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "mu_RS2")
anova_apa(AOV)
AOV <- aov_ez(data = Data[Fit<0.1,],id = "VP",between = "win",dv = "mu_f")
anova_apa(AOV)
library(emmeans)
MEANS <- emmeans(AOV,~win)
MEANS
contrast(MEANS)
contrast(MEANS,simple="win")
contrast(MEANS,"pievewise")
contrast(MEANS,method = "pairwise")
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + a + c +mu_t+mu_f+mu_SS+mu_RS)
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + a + c +mu_t+mu_f+mu_SS+mu_RS2)
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + a + c +mu_t+mu_f+mu_SS+mu_RS2 + (win|VP),)
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + a + c +mu_t+mu_f+mu_SS+mu_RS2 + (win|VP))
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + (Ter|VP))
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter )
LM <- lmer(data = Data[Fit<0.1,],formula = ptsum ~ Ter + (Ter|win))
LM <- lm(data = Data,formula = ptsum ~ Ter)
LM <- lm(data = Data,formula = ptsum ~ Ter + a + c + mu_t+mu_f+mu_RS2+mu_SS)
summary(LM)
LM <- lm(data = Data,formula = ptsum ~a + Ter+ c + mu_t+mu_f+mu_RS2+mu_SS)
summary(LM)
LM <- lm(data = Data,formula = ptsum ~a + Ter+ c + mu_t+mu_f+mu_RS2+mu_SS + win)
summary(LM)
LM <- lm(data = Data[win==1,],formula = ptsum ~a + Ter+ c + mu_t+mu_f+mu_RS2+mu_SS)
summary(LM)
LM <- lm(data = Data[win==0,],formula = ptsum ~a + Ter+ c + mu_t+mu_f+mu_RS2+mu_SS)
summary(LM)
Sys.setenv("PKG_CXXFLAGS"="-O3 -std=c++14" )
library(DDModeling)
library(DDModeling)
library(devtools)
document()
#build_manual(path=getwd())
M1 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.1,0.3,0.5,0.7,0.9),CAF_perc = c(0.0,0.2,0.4,0.6,0.8,1.0))
R1 <- Sim_DDModel(M1,10000)
R1
Sys.setenv("PKG_CXXFLAGS"="-O3 -std=c++14" )
library(DDModeling)
document()
library(DDModeling)
library(devtools)
document()
document()
library(DDModeling)
document()
devtools::build_vignettes()
devtools::build_vignettes(pkg = "DDModeling")
devtools::build_vignettes(pkg = DDModeling)
document()
devtools::check()
devtools::build()
devtools::check()
Sys.setenv("PKG_CXXFLAGS"="-O3 -std=c++14" )
library(devtools)
document()
library(DDModeling)
document()
library(DDModeling)
document()
document()
library(DDModeling)
M1 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.1,0.3,0.5,0.7,0.9),CAF_perc = c(0.0,0.2,0.4,0.6,0.8,1.0))
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- list(Cong=Cong,Incong=Incong)
names(RAW_b)
names(M1@MM)
names(RAW_b) == names(M1@MM)
alls(names(RAW_b) == names(M1@MM))
all(names(RAW_b) == names(M1@MM))
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- list(Cong2=Cong,Incong=Incong)
all(names(RAW_b) == names(M1@MM))
names(RAW_b) == names(M1@MM)
names(RAW_b) == names(M1@MM)
names(RAW_b) %in% names(M1@MM)
RAW_b <- list(Incong=Incong,Cong2=Cong)
names(RAW_b) %in% names(M1@MM)
RAW_b <- list(Incong=Incong,Cong=Cong)
names(RAW_b) %in% names(M1@MM)
all(names(RAW_b) == names(M1@MM))
names(RAW_b) == names(M1@MM)
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- rbind(Cong,Incong)
RAW_b[1,]
levels(RAW_b$cond)
RAW_b <- rbind(Incong,Cong)
levels(RAW_b$cond)
levels(RAW_b$cond) %in% names(M1@MM)
length(levels(RAW_b$cond))
library(DDModeling)
document()
M1 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.1,0.3,0.5,0.7,0.9),CAF_perc = c(0.0,0.2,0.4,0.6,0.8,1.0))
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- list(Incong=Incong,Cong=Cong)
test <- DDRep(M1,RAW_b)
RAW_b <- rbind(Incong,Cong)
RAW_b[1,]
str(RAW_b)
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong2",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- rbind(Incong,Cong)
str(RAW_b)
test <- DDRep(M1,RAW_b)
document()
library(DDModeling)
test <- DDRep(M1,RAW_b)
document()
library(DDModeling)
test <- DDRep(M1,RAW_b)
test <- DDRep(M1,RAW_b)
test <- DDRep(M1,RAW_b)
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- rbind(Incong,Cong)
test <- DDRep(M1,RAW_b)
document()
library(DDModeling)
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong2",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- rbind(Incong,Cong)
test <- DDRep(M1,RAW_b)
#M2 <- DDModel(model="DSTP",task = "flanker",CDF_perc = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95),CAF_perc = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
Cong <- data.frame(cond=rep("Cong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
Incong <- data.frame(cond=rep("Incong",100),time = round(rnorm(100,500,60)),resp= c(rep(1,40),rep(0,10)))
RAW_b <- rbind(Incong,Cong)
test <- DDRep(M1,RAW_b)
test
library(DDModeling)
?DDRep
test <- DDRep(M1,RAW_b)
test
test@RAW
head(test@RAW)
head(test@RAW[[1]])
summary(test@RAW[[1]])
summary(test@RAW)
show(test@RAW)
summary(test@RAW)
test@REP
summary(test@REP)
summary(test@REP[[1]])
summary(test@REP[[1]][[1]])
library(tables)
table_options(toprule="\\toprule",bottomrule="\\bottomrule",midrule="\\midrule")
test_t <- c()
test_t <- test@REP$CDF
test_t
test_t <- do.call(rbind,test@REP$CDF)
test_t
row.names(test_1)
row.names(test_t)
row.names(test_t) <- 1:nrow(test_t)
test_t
test_t$type <- "CDF"
test_t
tables::tabular(cond*perc*Heading()*identity~time+N,test_t)
tables::tabular(cond*perc*Heading()*identity~time,test_t)
tables::tabular(cond*Heading()*identity~time,test_t)
str(test_t)
test_t$perc <- as.factor(test_t$perc)
tables::tabular(cond*perc*Heading()*identity~time,test_t)
tables::tabular(cond*perc*Heading()*identity~time + n,test_t)
tables::tabular(cond*perc*Heading()*identity~time + N,test_t)
test@RF
document()
library(DDModeling)
test
document()
library(DDModeling)
test
library(DDModeling)
cat("\n")hi
cat("\nhi")
document()
test
library(DDModeling)
document()
?DDModel
()
document()
M_Custom <- DDModel(model="DSTP",task="custom",
CDF_perc = c(0.1,0.3,0.5,0.7,0.9),CAF_perc = c(0.0,0.2,0.4,0.6,0.8,1.0),
conditions="single",parameter=c("par_1","par_2"),dt=0.001,sigma=0.1)
M_Custom
document()
